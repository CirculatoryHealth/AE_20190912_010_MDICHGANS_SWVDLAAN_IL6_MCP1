color = uithof_color[8],
# fill = "Gender",
# palette = c("#1290D9", "#DB003F"),
add = "reg.line",
add.params =  list(color = "black", linetype = 2),
cor.coef = TRUE, cor.method = "spearman",
#xlim = c(-5, 5), ylim = c(-5, 5),
xlab = "intermediate monocyte %",
ylab = "MCP1 plaque levels, INT (plaque [pg/mL]",
title = "Comparing circulating intermediate monocyte % with MCP1 plaque levels",
ggtheme = theme_minimal())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_intermediate_vs_plaque.pdf"),
plot = last_plot())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_intermediate_vs_plaque.png"),
plot = last_plot())
ggpubr::ggscatter(AEDB.CEAmono,
x = "Classical_Absolute_rank",
y = "MCP1_pg_ml_2015_rank",
color = uithof_color[3],
# fill = "Gender",
# palette = c("#1290D9", "#DB003F"),
add = "reg.line",
add.params =  list(color = "black", linetype = 2),
cor.coef = TRUE, cor.method = "spearman",
#xlim = c(-5, 5), ylim = c(-5, 5),
xlab = "absolute classical monocyte counts, INT",
ylab = "MCP1 plaque levels, INT (plaque [pg/mL]",
title = "Comparing circulating classical monocyte counts with MCP1 plaque levels",
ggtheme = theme_minimal())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_classical_counts_vs_plaque.pdf"),
plot = last_plot())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_classical_counts_vs_plaque.png"),
plot = last_plot())
ggpubr::ggscatter(AEDB.CEAmono,
x = "Intermediate_perc",
y = "MCP1_pg_ml_2015_rank",
color = uithof_color[8],
# fill = "Gender",
# palette = c("#1290D9", "#DB003F"),
add = "reg.line",
add.params =  list(color = "black", linetype = 2),
cor.coef = TRUE, cor.method = "spearman",
#xlim = c(-5, 5), ylim = c(-5, 5),
xlab = "intermediate monocyte %",
ylab = "MCP1 plaque levels, INT (plaque [pg/mL]",
title = "Comparing circulating intermediate monocyte % with MCP1 plaque levels",
ggtheme = theme_minimal())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_intermediate_vs_plaque.pdf"),
plot = last_plot())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_intermediate_vs_plaque.png"),
plot = last_plot())
ggpubr::ggscatter(AEDB.CEAmono,
x = "Classical_Absolute_rank",
y = "MCP1_pg_ml_2015_rank",
color = uithof_color[8],
# fill = "Gender",
# palette = c("#1290D9", "#DB003F"),
add = "reg.line",
add.params =  list(color = "black", linetype = 2),
cor.coef = TRUE, cor.method = "spearman",
#xlim = c(-5, 5), ylim = c(-5, 5),
xlab = "absolute classical monocyte counts, INT",
ylab = "MCP1 plaque levels, INT (plaque [pg/mL]",
title = "Comparing circulating classical monocyte counts with MCP1 plaque levels",
ggtheme = theme_minimal())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_classical_counts_vs_plaque.pdf"),
plot = last_plot())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_classical_counts_vs_plaque.png"),
plot = last_plot())
ggpubr::ggscatter(AEDB.CEAmono,
x = "Classical_perc",
y = "MCP1_pg_ml_2015_rank",
color = uithof_color[3],
# fill = "Gender",
# palette = c("#1290D9", "#DB003F"),
add = "reg.line",
add.params =  list(color = "black", linetype = 2),
cor.coef = TRUE, cor.method = "spearman",
#xlim = c(-5, 5), ylim = c(-5, 5),
xlab = "classical monocyte %",
ylab = "MCP1 plaque levels, INT (plaque [pg/mL]",
title = "Comparing circulating classical monocyte % with MCP1 plaque levels",
ggtheme = theme_minimal())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_classical_vs_plaque.pdf"),
plot = last_plot())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_classical_vs_plaque.png"),
plot = last_plot())
ggpubr::ggscatter(AEDB.CEAmono,
x = "Classical_Absolute_rank",
y = "MCP1_pg_ml_2015_rank",
color = uithof_color[3],
# fill = "Gender",
# palette = c("#1290D9", "#DB003F"),
add = "reg.line",
add.params =  list(color = "black", linetype = 2),
cor.coef = TRUE, cor.method = "spearman",
#xlim = c(-5, 5), ylim = c(-5, 5),
xlab = "absolute classical monocyte counts, INT",
ylab = "MCP1 plaque levels, INT (plaque [pg/mL]",
title = "Comparing circulating classical monocyte counts with MCP1 plaque levels",
ggtheme = theme_minimal())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_classical_counts_vs_plaque.pdf"),
plot = last_plot())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_classical_counts_vs_plaque.png"),
plot = last_plot())
ggpubr::ggscatter(AEDB.CEAmono,
x = "Intermediate_perc",
y = "MCP1_pg_ml_2015_rank",
color = uithof_color[8],
# fill = "Gender",
# palette = c("#1290D9", "#DB003F"),
add = "reg.line",
add.params =  list(color = "black", linetype = 2),
cor.coef = TRUE, cor.method = "spearman",
#xlim = c(-5, 5), ylim = c(-5, 5),
xlab = "intermediate monocyte %",
ylab = "MCP1 plaque levels, INT (plaque [pg/mL]",
title = "Comparing circulating intermediate monocyte % with MCP1 plaque levels",
ggtheme = theme_minimal())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_intermediate_vs_plaque.pdf"),
plot = last_plot())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_intermediate_vs_plaque.png"),
plot = last_plot())
ggpubr::ggscatter(AEDB.CEAmono,
x = "Classical_Absolute_rank",
y = "MCP1_pg_ml_2015_rank",
color = uithof_color[8],
# fill = "Gender",
# palette = c("#1290D9", "#DB003F"),
add = "reg.line",
add.params =  list(color = "black", linetype = 2),
cor.coef = TRUE, cor.method = "spearman",
#xlim = c(-5, 5), ylim = c(-5, 5),
xlab = "absolute classical monocyte counts, INT",
ylab = "MCP1 plaque levels, INT (plaque [pg/mL]",
title = "Comparing circulating classical monocyte counts with MCP1 plaque levels",
ggtheme = theme_minimal())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_intermediate_counts_vs_plaque.pdf"),
plot = last_plot())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_intermediate_counts_vs_plaque.png"),
plot = last_plot())
ggpubr::ggscatter(AEDB.CEAmono,
x = "Intermediate_perc",
y = "MCP1_pg_ml_2015_rank",
color = uithof_color[8],
# fill = "Gender",
# palette = c("#1290D9", "#DB003F"),
add = "reg.line",
add.params =  list(color = "black", linetype = 2),
cor.coef = TRUE, cor.method = "spearman",
#xlim = c(-5, 5), ylim = c(-5, 5),
xlab = "intermediate monocyte %",
ylab = "MCP1 plaque levels, INT (plaque [pg/mL]",
title = "Comparing circulating intermediate monocyte % with MCP1 plaque levels",
ggtheme = theme_minimal())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_intermediate_vs_plaque.pdf"),
plot = last_plot())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_intermediate_vs_plaque.png"),
plot = last_plot())
ggpubr::ggscatter(AEDB.CEAmono,
x = "Intermediate_Absolute_rank",
y = "MCP1_pg_ml_2015_rank",
color = uithof_color[8],
# fill = "Gender",
# palette = c("#1290D9", "#DB003F"),
add = "reg.line",
add.params =  list(color = "black", linetype = 2),
cor.coef = TRUE, cor.method = "spearman",
#xlim = c(-5, 5), ylim = c(-5, 5),
xlab = "absolute classical monocyte counts, INT",
ylab = "MCP1 plaque levels, INT (plaque [pg/mL]",
title = "Comparing circulating classical monocyte counts with MCP1 plaque levels",
ggtheme = theme_minimal())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_intermediate_counts_vs_plaque.pdf"),
plot = last_plot())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_intermediate_counts_vs_plaque.png"),
plot = last_plot())
ggpubr::ggscatter(AEDB.CEAmono,
x = "Intermediate_perc",
y = "MCP1_pg_ml_2015_rank",
color = uithof_color[8],
# fill = "Gender",
# palette = c("#1290D9", "#DB003F"),
add = "reg.line",
add.params =  list(color = "black", linetype = 2),
cor.coef = TRUE, cor.method = "spearman",
#xlim = c(-5, 5), ylim = c(-5, 5),
xlab = "intermediate monocyte %",
ylab = "MCP1 plaque levels, INT (plaque [pg/mL]",
title = "Comparing circulating intermediate monocyte % with MCP1 plaque levels",
ggtheme = theme_minimal())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_intermediate_vs_plaque.pdf"),
plot = last_plot())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_intermediate_vs_plaque.png"),
plot = last_plot())
ggpubr::ggscatter(AEDB.CEAmono,
x = "Intermediate_Absolute_rank",
y = "MCP1_pg_ml_2015_rank",
color = uithof_color[8],
# fill = "Gender",
# palette = c("#1290D9", "#DB003F"),
add = "reg.line",
add.params =  list(color = "black", linetype = 2),
cor.coef = TRUE, cor.method = "spearman",
#xlim = c(-5, 5), ylim = c(-5, 5),
xlab = "absolute intermediate monocyte counts, INT",
ylab = "MCP1 plaque levels, INT (plaque [pg/mL]",
title = "Comparing circulating intermediate monocyte counts with MCP1 plaque levels",
ggtheme = theme_minimal())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_intermediate_counts_vs_plaque.pdf"),
plot = last_plot())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_intermediate_counts_vs_plaque.png"),
plot = last_plot())
ggpubr::ggscatter(AEDB.CEAmono,
x = "Nonclassical_perc",
y = "MCP1_pg_ml_2015_rank",
color = uithof_color[19],
# fill = "Gender",
# palette = c("#1290D9", "#DB003F"),
add = "reg.line",
add.params =  list(color = "black", linetype = 2),
cor.coef = TRUE, cor.method = "spearman",
#xlim = c(-5, 5), ylim = c(-5, 5),
xlab = "non-classical monocyte %",
ylab = "MCP1 plaque levels, INT (plaque [pg/mL]",
title = "Comparing circulating non-classical monocyte % with MCP1 plaque levels",
ggtheme = theme_minimal())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_nonclassical_vs_plaque.pdf"),
plot = last_plot())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_nonclassical_vs_plaque.png"),
plot = last_plot())
ggpubr::ggscatter(AEDB.CEAmono,
x = "Nonclassical_Absolute_rank",
y = "MCP1_pg_ml_2015_rank",
color = uithof_color[19],
# fill = "Gender",
# palette = c("#1290D9", "#DB003F"),
add = "reg.line",
add.params =  list(color = "black", linetype = 2),
cor.coef = TRUE, cor.method = "spearman",
#xlim = c(-5, 5), ylim = c(-5, 5),
xlab = "absolute non-classical monocyte counts, INT",
ylab = "MCP1 plaque levels, INT (plaque [pg/mL]",
title = "Comparing circulating non-classical monocyte counts with MCP1 plaque levels",
ggtheme = theme_minimal())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_nonclassical_counts_vs_plaque.pdf"),
plot = last_plot())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_nonclassical_counts_vs_plaque.png"),
plot = last_plot())
ggpubr::ggscatter(AEDB.CEAmono,
x = "Nonclassical_perc",
y = "MCP1_pg_ml_2015_rank",
color = uithof_color[19],
# fill = "Gender",
# palette = c("#1290D9", "#DB003F"),
add = "reg.line",
add.params =  list(color = "black", linetype = 2),
cor.coef = TRUE, cor.method = "spearman",
#xlim = c(-5, 5), ylim = c(-5, 5),
xlab = "non-classical monocyte %",
ylab = "MCP1 plaque levels, INT (plaque [pg/mL]",
title = "Comparing circulating non-classical monocyte % with MCP1 plaque levels",
ggtheme = theme_minimal())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_nonclassical_vs_plaque.pdf"),
plot = last_plot())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_nonclassical_vs_plaque.png"),
plot = last_plot())
ggpubr::ggscatter(AEDB.CEAmono,
x = "Nonclassical_Absolute_rank",
y = "MCP1_pg_ml_2015_rank",
color = uithof_color[19],
# fill = "Gender",
# palette = c("#1290D9", "#DB003F"),
add = "reg.line",
add.params =  list(color = "black", linetype = 2),
cor.coef = TRUE, cor.method = "spearman",
#xlim = c(-5, 5), ylim = c(-5, 5),
xlab = "absolute non-classical monocyte counts, INT",
ylab = "MCP1 plaque levels, INT (plaque [pg/mL]",
title = "Comparing circulating non-classical monocyte counts with MCP1 plaque levels",
ggtheme = theme_minimal())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_nonclassical_counts_vs_plaque.pdf"),
plot = last_plot())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_nonclassical_counts_vs_plaque.png"),
plot = last_plot())
names(AEDB.CEAmono)[names(AEDB.CEAmono) == "Total Mono_Absolute"] <- "Total_Mono_Absolute"
AEDB.CEAmono$Total_Mono_Absolute_rank <- qnorm((rank(AEDB.CEAmono$Total_Mono_Absolute, na.last = "keep") - 0.5) / sum(!is.na(AEDB.CEAmono$Total_Mono_Absolute)))
AEDB.CEAmono$Classical_Absolute_rank <- qnorm((rank(AEDB.CEAmono$Classical_Absolute, na.last = "keep") - 0.5) / sum(!is.na(AEDB.CEAmono$Classical_Absolute)))
AEDB.CEAmono$Intermediate_Absolute_rank <- qnorm((rank(AEDB.CEAmono$Intermediate_Absolute, na.last = "keep") - 0.5) / sum(!is.na(AEDB.CEAmono$Intermediate_Absolute)))
AEDB.CEAmono$Nonclassical_Absolute_rank <- qnorm((rank(AEDB.CEAmono$Nonclassical_Absolute, na.last = "keep") - 0.5) / sum(!is.na(AEDB.CEAmono$Nonclassical_Absolute)))
ggpubr::ggscatter(AEDB.CEAmono,
x = "Total_Mono_Absolute_rank",
y = "MCP1_pg_ml_2015_rank",
color = "#1290D9",
# fill = "Gender",
# palette = c("#1290D9", "#DB003F"),
add = "reg.line",
add.params =  list(color = "black", linetype = 2),
cor.coef = TRUE, cor.method = "spearman",
#xlim = c(-5, 5), ylim = c(-5, 5),
xlab = "total absolute monocyte counts, INT",
ylab = "MCP1 plaque levels, INT (plaque [pg/mL]",
title = "Comparing circulating monocyte counts with MCP1 plaque levels",
ggtheme = theme_minimal())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_vs_plaque.pdf"),
plot = last_plot())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_vs_plaque.png"),
plot = last_plot())
ggpubr::ggscatter(AEDB.CEAmono,
x = "Classical_perc",
y = "MCP1_pg_ml_2015_rank",
color = uithof_color[3],
# fill = "Gender",
# palette = c("#1290D9", "#DB003F"),
add = "reg.line",
add.params =  list(color = "black", linetype = 2),
cor.coef = TRUE, cor.method = "spearman",
#xlim = c(-5, 5), ylim = c(-5, 5),
xlab = "classical monocyte %",
ylab = "MCP1 plaque levels, INT (plaque [pg/mL]",
title = "Comparing circulating classical monocyte % with MCP1 plaque levels",
ggtheme = theme_minimal())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_classical_vs_plaque.pdf"),
plot = last_plot())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_classical_vs_plaque.png"),
plot = last_plot())
ggpubr::ggscatter(AEDB.CEAmono,
x = "Classical_Absolute_rank",
y = "MCP1_pg_ml_2015_rank",
color = uithof_color[3],
# fill = "Gender",
# palette = c("#1290D9", "#DB003F"),
add = "reg.line",
add.params =  list(color = "black", linetype = 2),
cor.coef = TRUE, cor.method = "spearman",
#xlim = c(-5, 5), ylim = c(-5, 5),
xlab = "absolute classical monocyte counts, INT",
ylab = "MCP1 plaque levels, INT (plaque [pg/mL]",
title = "Comparing circulating classical monocyte counts with MCP1 plaque levels",
ggtheme = theme_minimal())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_classical_counts_vs_plaque.pdf"),
plot = last_plot())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_classical_counts_vs_plaque.png"),
plot = last_plot())
ggpubr::ggscatter(AEDB.CEAmono,
x = "Intermediate_perc",
y = "MCP1_pg_ml_2015_rank",
color = uithof_color[8],
# fill = "Gender",
# palette = c("#1290D9", "#DB003F"),
add = "reg.line",
add.params =  list(color = "black", linetype = 2),
cor.coef = TRUE, cor.method = "spearman",
#xlim = c(-5, 5), ylim = c(-5, 5),
xlab = "intermediate monocyte %",
ylab = "MCP1 plaque levels, INT (plaque [pg/mL]",
title = "Comparing circulating intermediate monocyte % with MCP1 plaque levels",
ggtheme = theme_minimal())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_intermediate_vs_plaque.pdf"),
plot = last_plot())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_intermediate_vs_plaque.png"),
plot = last_plot())
ggpubr::ggscatter(AEDB.CEAmono,
x = "Intermediate_Absolute_rank",
y = "MCP1_pg_ml_2015_rank",
color = uithof_color[8],
# fill = "Gender",
# palette = c("#1290D9", "#DB003F"),
add = "reg.line",
add.params =  list(color = "black", linetype = 2),
cor.coef = TRUE, cor.method = "spearman",
#xlim = c(-5, 5), ylim = c(-5, 5),
xlab = "absolute intermediate monocyte counts, INT",
ylab = "MCP1 plaque levels, INT (plaque [pg/mL]",
title = "Comparing circulating intermediate monocyte counts with MCP1 plaque levels",
ggtheme = theme_minimal())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_intermediate_counts_vs_plaque.pdf"),
plot = last_plot())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_intermediate_counts_vs_plaque.png"),
plot = last_plot())
ggpubr::ggscatter(AEDB.CEAmono,
x = "Nonclassical_perc",
y = "MCP1_pg_ml_2015_rank",
color = uithof_color[19],
# fill = "Gender",
# palette = c("#1290D9", "#DB003F"),
add = "reg.line",
add.params =  list(color = "black", linetype = 2),
cor.coef = TRUE, cor.method = "spearman",
#xlim = c(-5, 5), ylim = c(-5, 5),
xlab = "non-classical monocyte %",
ylab = "MCP1 plaque levels, INT (plaque [pg/mL]",
title = "Comparing circulating non-classical monocyte % with MCP1 plaque levels",
ggtheme = theme_minimal())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_nonclassical_vs_plaque.pdf"),
plot = last_plot())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_nonclassical_vs_plaque.png"),
plot = last_plot())
ggpubr::ggscatter(AEDB.CEAmono,
x = "Nonclassical_Absolute_rank",
y = "MCP1_pg_ml_2015_rank",
color = uithof_color[19],
# fill = "Gender",
# palette = c("#1290D9", "#DB003F"),
add = "reg.line",
add.params =  list(color = "black", linetype = 2),
cor.coef = TRUE, cor.method = "spearman",
#xlim = c(-5, 5), ylim = c(-5, 5),
xlab = "absolute non-classical monocyte counts, INT",
ylab = "MCP1 plaque levels, INT (plaque [pg/mL]",
title = "Comparing circulating non-classical monocyte counts with MCP1 plaque levels",
ggtheme = theme_minimal())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_nonclassical_counts_vs_plaque.pdf"),
plot = last_plot())
ggsave(filename = paste0(QC_loc, "/",Today,".",PROJECTNAME,".Comparison.mono_nonclassical_counts_vs_plaque.png"),
plot = last_plot())
sessionInfo()
# For quick debug inspection
# TRAITS.PROTEIN.RANK.extra = c("MCP1_pg_ml_2015_rank")
# proteins_of_interest_rank_mcp1
# proteins_of_interest_rank
GLM.results <- data.frame(matrix(NA, ncol = 16, nrow = 0))
for (protein in 1:length(proteins_of_interest_rank)) {
PROTEIN = proteins_of_interest_rank[protein]
cat(paste0("\nAnalysis of ",PROTEIN,".\n"))
TRAIT = "Plaque_Vulnerability_Index"
cat(paste0("\n- processing ",TRAIT,"\n\n"))
currentDF <- as.data.frame(AEDB.CEA %>%
dplyr::select(., PROTEIN, TRAIT, COVARIATES_M1, ORdate_epoch) %>%
filter(complete.cases(.))) %>%
filter_if(~is.numeric(.), all_vars(!is.infinite(.))) %>%
droplevels(.)
# fix numeric OR year
currentDF$ORdate_year <- as.numeric(currentDF$ORdate_year)
# for debug
# print(DT::datatable(currentDF))
# print(nrow(currentDF))
# print(str(currentDF))
# print(class(currentDF[,TRAIT]))
# table(currentDF$ORdate_year)
### univariate
# + Hypertension.composite + DiabetesStatus + SmokerCurrent +
#            Med.Statin.LLD + Med.all.antiplatelet + GFR_MDRD + BMI +
#            CAD_history + Stroke_history + Peripheral.interv + stenose
fit <- polr(currentDF[,TRAIT] ~ currentDF[,PROTEIN] + Age + Gender + ORdate_year,
data  =  currentDF,
Hess = TRUE)
print(summary(fit))
## store table
(ctable <- coef(summary(fit)))
## calculate and store p values
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
## combined table
print((ctable <- cbind(ctable, "p value" = p)))
}
COVARIATES_M1.extra = c("MCP1_pg_ml_2015_rank")
GLM.results <- data.frame(matrix(NA, ncol = 16, nrow = 0))
for (protein in 1:length(proteins_of_interest_rank)) {
PROTEIN = proteins_of_interest_rank[protein]
cat(paste0("\nAnalysis of ",PROTEIN,".\n"))
TRAIT = "Plaque_Vulnerability_Index"
cat(paste0("\n- processing ",TRAIT,"\n\n"))
currentDF <- as.data.frame(AEDB.CEA %>%
dplyr::select(., PROTEIN, TRAIT, COVARIATES_M1, COVARIATES_M1.extra, ORdate_epoch) %>%
filter(complete.cases(.))) %>%
filter_if(~is.numeric(.), all_vars(!is.infinite(.))) %>%
droplevels(.)
# fix numeric OR year
currentDF$ORdate_year <- as.numeric(currentDF$ORdate_year)
# for debug
# print(DT::datatable(currentDF))
# print(nrow(currentDF))
# print(str(currentDF))
# print(class(currentDF[,TRAIT]))
# table(currentDF$ORdate_year)
### univariate
# + Hypertension.composite + DiabetesStatus + SmokerCurrent +
#            Med.Statin.LLD + Med.all.antiplatelet + GFR_MDRD + BMI +
#            CAD_history + Stroke_history + Peripheral.interv + stenose
fit <- polr(currentDF[,TRAIT] ~ currentDF[,PROTEIN] + Age + Gender + ORdate_year + MCP1_pg_ml_2015_rank,
data  =  currentDF,
Hess = TRUE)
print(summary(fit))
## store table
(ctable <- coef(summary(fit)))
## calculate and store p values
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
## combined table
print((ctable <- cbind(ctable, "p value" = p)))
}
COVARIATES_M1.extra = c("MCP1_pg_ml_2015_rank")
GLM.results <- data.frame(matrix(NA, ncol = 16, nrow = 0))
TRAIT = "Plaque_Vulnerability_Index"
currentDF <- as.data.frame(AEDB.CEA %>%
dplyr::select(., proteins_of_interest_rank, TRAIT, COVARIATES_M1, COVARIATES_M1.extra, ORdate_epoch) %>%
filter(complete.cases(.))) %>%
filter_if(~is.numeric(.), all_vars(!is.infinite(.))) %>%
droplevels(.)
# fix numeric OR year
currentDF$ORdate_year <- as.numeric(currentDF$ORdate_year)
fit <- polr(currentDF[,TRAIT] ~ currentDF[,PROTEIN] + Age + Gender + ORdate_year + MCP1_pg_ml_2015_rank + IL2_rank + IL4_rank + IL5_rank + IL6_rank + IL8_rank + IL9_rank + IL10_rank + IL12_rank + IL13_rank + IL21_rank + INFG_rank + TNFA_rank + MIF_rank + MIP1a_rank + RANTES_rank + MIG_rank + IP10_rank + Eotaxin1_rank + TARC_rank + PARC_rank + MDC_rank + OPG_rank + sICAM1_rank + VEGFA_rank + TGFB_rank + MMP2_rank + MMP8_rank + MMP9_rank,
data  =  currentDF,
Hess = TRUE)
print(summary(fit))
## store table
(ctable <- coef(summary(fit)))
## calculate and store p values
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
## combined table
print((ctable <- cbind(ctable, "p value" = p)))
sessionInfo()
save.image(paste0(PROJECT_loc, "/",Today,".",PROJECTNAME,".review_comments.RData"))
